#define PORT0 0
#define __LPM_classic__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); uint8_t __result; __asm__ __volatile__ ( "lpm" "\n\t" "mov %0, r0" "\n\t" : "=r" (__result) : "z" (__addr16) : "r0" ); __result; }))
#define PRIXFAST32 "lX"
#define INT0 0
#define INT1 1
#define __DBL_MIN_EXP__ (-125)
#define clockCyclesToMicroseconds(a) ( (a) / clockCyclesPerMicrosecond() )
#define B00010000 16
#define __HQ_FBIT__ 15
#define B11101000 232
#define B11101001 233
#define PRADC 0
#define __cpp_attributes 200809
#define M_SQRT1_2 0.70710678118654752440
#define Arduino_h 
#define sq(x) ((x)*(x))
#define B01000100 68
#define B01000101 69
#define M_PI_2 1.57079632679489661923
#define M_PI_4 0.78539816339744830962
#define __LPM_dword_classic__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); uint32_t __result; __asm__ __volatile__ ( "lpm" "\n\t" "mov %A0, r0" "\n\t" "adiw r30, 1" "\n\t" "lpm" "\n\t" "mov %B0, r0" "\n\t" "adiw r30, 1" "\n\t" "lpm" "\n\t" "mov %C0, r0" "\n\t" "adiw r30, 1" "\n\t" "lpm" "\n\t" "mov %D0, r0" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) : "r0" ); __result; }))
#define B11101010 234
#define __UINT_LEAST16_MAX__ 65535U
#define OCF0B 2
#define fdev_set_udata(stream,u) do { (stream)->udata = u; } while(0)
#define __ATOMIC_ACQUIRE 2
#define B01000110 70
#define B01000111 71
#define noInterrupts() cli()
#define OCF1A 1
#define OCF1B 2
#define __SFRACT_IBIT__ 0
#define __FLT_MIN__ 1.17549435e-38F
#define __GCC_IEC_559_COMPLEX 0
#define __BUILTIN_AVR_SLEEP 1
#define B01011000 88
#define B01011001 89
#define __BUILTIN_AVR_COUNTLSULLK 1
#define __BUILTIN_AVR_COUNTLSULLR 1
#define OCF2B 2
#define __UFRACT_MAX__ 0XFFFFP-16UR
#define __UINT_LEAST8_TYPE__ unsigned char
#define _T_WCHAR_ 
#define LOCKMEM __attribute__((__used__, __section__ (".lock")))
#define fmaxf fmax
#define WGM20 0
#define INT_LEAST16_MIN INT16_MIN
#define B01011010 90
#define B01011011 91
#define FUSE_BOOTRST (unsigned char)~_BV(0)
#define B0100001 33
#define PRIuPTR PRIu16
#define __DQ_FBIT__ 63
#define __INTMAX_C(c) c ## LL
#define B0100010 34
#define B0100011 35
#define __STDC_CONSTANT_MACROS 
#define __ULFRACT_FBIT__ 32
#define B01110100 116
#define B01110101 117
#define __SACCUM_EPSILON__ 0x1P-7HK
#define __CHAR_BIT__ 8
#define EEAR _SFR_IO16(0x21)
#define B11101101 237
#define Binary_h 
#define FE0 4
#define B110101 53
#define B01110110 118
#define __USQ_IBIT__ 0
#define B001101 13
#define __UINT8_MAX__ 255
#define ACI 4
#define __LPM_float(addr) __LPM_float_enhanced__(addr)
#define EECR _SFR_IO8(0x1F)
#define __ACCUM_FBIT__ 15
#define floorf floor
#define PRIiLEAST16 "i"
#define INT16_C(value) value
#define __WINT_MAX__ 32767
#define LB_MODE_1 (0xFF)
#define LB_MODE_3 (0xFC)
#define UBRR0_0 0
#define UBRR0_1 1
#define UBRR0_2 2
#define UBRR0_3 3
#define UBRR0_4 4
#define UBRR0_5 5
#define UBRR0_6 6
#define UBRR0_7 7
#define UBRR0_8 0
#define UBRR0_9 1
#define __PROG_TYPES_COMPAT__ 1
#define EEDR _SFR_IO8(0x20)
#define INT8_MAX 0x7f
#define EEDR1 1
#define EEDR2 2
#define EEDR3 3
#define EEDR4 4
#define UINT_LEAST64_MAX UINT64_MAX
#define EEDR6 6
#define EEDR7 7
#define ANALOG_COMP_vect _VECTOR(23)
#define stderr (__iob[2])
#define Stream_h 
#define FUSE_RSTDISBL (unsigned char)~_BV(7)
#define B1110011 115
#define B1001010 74
#define B1001101 77
#define __cpp_static_assert 200410
#define EEAR0 0
#define va_start(v,l) __builtin_va_start(v,l)
#define TIMER0_OVF_vect _VECTOR(16)
#define __MATH_H 
#define __USFRACT_FBIT__ 8
#define AVR_STACK_POINTER_HI_ADDR _SFR_IO_ADDR(SPH)
#define B1001110 78
#define B1001111 79
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __SIZE_MAX__ 65535U
#define SPCR _SFR_IO8(0x2C)
#define FUSE_WDTON (unsigned char)~_BV(4)
#define __WCHAR_MAX__ 32767
#define NUM_ANALOG_INPUTS 16
#define SPDR _SFR_IO8(0x2E)
#define INT16_MAX 0x7fff
#define M_E 2.7182818284590452354
#define ACBG 6
#define __LACCUM_IBIT__ 32
#define __DBL_DENORM_MIN__ double(1.40129846e-45L)
#define B10000000 128
#define B10000001 129
#define __GCC_ATOMIC_CHAR_LOCK_FREE 1
#define __GCC_IEC_559 0
#define SLEEP_MODE_STANDBY (0x06<<1)
#define TIMER1_CAPT_vect _VECTOR(10)
#define B10000010 130
#define SREG_C (0)
#define SREG_H (5)
#define SREG_I (7)
#define SREG_N (2)
#define SREG_S (4)
#define SREG_T (6)
#define __FLT_EVAL_METHOD__ 0
#define SREG_V (3)
#define SREG_Z (1)
#define __BUILTIN_AVR_LLKBITS 1
#define __cpp_binary_literals 201304
#define fdev_close() ((void)0)
#define __LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-47LLK
#define highByte(w) ((uint8_t) ((w) >> 8))
#define B1111100 124
#define B1111101 125
#define INTERNAL 3
#define M_PI 3.14159265358979323846
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 1
#define ISC11 3
#define TIMER2 5
#define B1111111 127
#define __BUILTIN_AVR_HKBITS 1
#define SPIE 7
#define SPIF 7
#define INT8_MIN (-INT8_MAX - 1)
#define B010010 18
#define PORTB0 0
#define PORTB1 1
#define PORTB2 2
#define PORTB3 3
#define PORTB4 4
#define PORTB5 5
#define PORTB6 6
#define PORTB7 7
#define TXB80 0
#define TIMER0A 1
#define TIMER0B 2
#define SERIAL_7N2 0x0C
#define __BUILTIN_AVR_BITSLLK 1
#define __FRACT_FBIT__ 15
#define reti() __asm__ __volatile__ ("reti" ::)
#define __BUILTIN_AVR_BITSLLR 1
#define PD3 PORTD3
#define CS00 0
#define CS01 1
#define PORTC0 0
#define __cpp_variadic_templates 200704
#define PORTC2 2
#define PORTC3 3
#define PORTC4 4
#define PORTC5 5
#define PORTC6 6
#define TIMER1A 3
#define TIMER1B 4
#define SERIAL_7O2 0x3C
#define digitalPinToBitMask(P) ( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )
#define B10110000 176
#define B10110001 177
#define CS10 0
#define CS11 1
#define CS12 2
#define PORTD0 0
#define PORTD1 1
#define PORTD2 2
#define __UINT_FAST64_MAX__ 18446744073709551615ULL
#define PORTD4 4
#define PORTD5 5
#define __SIG_ATOMIC_TYPE__ char
#define TIMER2A 6
#define TIMER2B 7
#define ACIC 2
#define ACIE 3
#define __BUILTIN_AVR_UHKBITS 1
#define B00010001 17
#define B10110010 178
#define B10110011 179
#define SELFPRGEN 0
#define __UACCUM_FBIT__ 16
#define __DBL_MIN_10_EXP__ (-37)
#define INT16_MIN (-INT16_MAX - 1)
#define CS20 0
#define CS21 1
#define CS22 2
#define __FINITE_MATH_ONLY__ 0
#define TIMER3A 8
#define TIMER3B 9
#define TIMER3C 10
#define EEPE 1
#define UINTMAX_C(value) __CONCAT(value, ULL)
#define ldexpf ldexp
#define MPCM0 0
#define B01001010 74
#define B01001011 75
#define TIMER4A 11
#define TIMER4B 12
#define TIMER4C 13
#define TCNT1H4 4
#define TIMER1_CAPT_vect_num 10
#define PRIxPTR PRIx16
#define __LFRACT_IBIT__ 0
#define DTOSTR_ALWAYS_SIGN 0x01
#define TIMER5A 15
#define TIMER5B 16
#define TIMER5C 17
#define __GNUC_PATCHLEVEL__ 2
#define EERE 0
#define B1110 14
#define __AVR_MEGA__ 1
#define __LFRACT_MAX__ 0X7FFFFFFFP-31LR
#define ACME 6
#define B01100101 101
#define RISING 3
#define __UINT_FAST8_MAX__ 255
#define FUSE_DWEN (unsigned char)~_BV(6)
#define B11101111 239
#define __has_include(STR) __has_include__(STR)
#define __size_t 
#define PIN0 0
#define PIN1 1
#define PIN2 2
#define PIN3 3
#define PIN4 4
#define PIN5 5
#define PIN6 6
#define PIN7 7
#define B01100110 102
#define B11011101 221
#define PINB _SFR_IO8(0x03)
#define PINC _SFR_IO8(0x06)
#define PIND _SFR_IO8(0x09)
#define INT_FAST8_MAX INT8_MAX
#define __DEC64_MAX_EXP__ 385
#define _WCHAR_T_DEFINED 
#define PCINT1_vect_num 4
#define B001111 15
#define __INT8_C(c) c
#define __LPM_float_classic__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); float __result; __asm__ __volatile__ ( "lpm" "\n\t" "mov %A0, r0" "\n\t" "adiw r30, 1" "\n\t" "lpm" "\n\t" "mov %B0, r0" "\n\t" "adiw r30, 1" "\n\t" "lpm" "\n\t" "mov %C0, r0" "\n\t" "adiw r30, 1" "\n\t" "lpm" "\n\t" "mov %D0, r0" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) : "r0" ); __result; }))
#define B11011110 222
#define B11011111 223
#define B10100 20
#define B10101 21
#define SPR0 0
#define SPR1 1
#define B01111000 120
#define B01111001 121
#define TCR2BUB 0
#define __UINT_LEAST64_MAX__ 18446744073709551615ULL
#define E2PAGESIZE 4
#define B10110 22
#define __SA_FBIT__ 15
#define powf pow
#define B01111010 122
#define _AVR_FUSE_H_ 1
#define BLB0_MODE_1 (0xFF)
#define BLB0_MODE_2 (0xFB)
#define BLB0_MODE_3 (0xF3)
#define BLB0_MODE_4 (0xF7)
#define SPSR _SFR_IO8(0x2D)
#define __SHRT_MAX__ 32767
#define TWSR _SFR_MEM8(0xB9)
#define __LDBL_MAX__ 3.40282347e+38L
#define __FRACT_MAX__ 0X7FFFP-15R
#define B10111 23
#define IVCE 0
#define __UFRACT_FBIT__ 16
#define B0010100 20
#define B0010101 21
#define __LPM_word(addr) __LPM_word_enhanced__(addr)
#define ACSR _SFR_IO8(0x30)
#define UPM00 4
#define UPM01 5
#define FOC0A 7
#define FOC0B 6
#define USART_TX_vect_num 20
#define B0010110 22
#define B0010111 23
#define SCNd16 "d"
#define __UFRACT_MIN__ 0.0UR
#define __UINT_LEAST8_MAX__ 255
#define B000 0
#define B001 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 1
#define FOC1A 7
#define FOC1B 6
#define USART_TX_vect _VECTOR(20)
#define sinhf sinh
#define __ptr_t void *
#define RXEN0 4
#define TWGCE 0
#define __UINTMAX_TYPE__ long long unsigned int
#define B010 2
#define B011 3
#define FOC2A 7
#define FOC2B 6
#define WDT_vect_num 6
#define __LLFRACT_EPSILON__ 0x1P-63LLR
#define B010011 19
#define INT_FAST8_MIN INT8_MIN
#define SCNd32 "ld"
#define __BUILTIN_AVR_DELAY_CYCLES 1
#define cli() __asm__ __volatile__ ("cli" ::: "memory")
#define __DEC32_EPSILON__ 1E-6DF
#define SPI_STC_vect_num 17
#define bit_is_clear(sfr,bit) (!(_SFR_BYTE(sfr) & _BV(bit)))
#define __OPTIMIZE__ 1
#define B1101100 108
#define B1101101 109
#define putchar(__c) fputc(__c, stdout)
#define B0000 0
#define B0001 1
#define SCNo16 "o"
#define B000000 0
#define B000001 1
#define EIFR _SFR_IO8(0x1C)
#define B00100001 33
#define __UINT32_MAX__ 4294967295UL
#define __GXX_EXPERIMENTAL_CXX0X__ 1
#define B01111011 123
#define B1101110 110
#define ICNC1 7
#define B0010 2
#define __ULFRACT_MAX__ 0XFFFFFFFFP-32ULR
#define getc(__stream) fgetc(__stream)
#define B000010 2
#define __TA_IBIT__ 16
#define __SIZE_T 
#define EE_READY_vect_num 22
#define B10011100 156
#define pgm_read_word_near(address_short) __LPM_word((uint16_t)(address_short))
#define __LDBL_MAX_EXP__ 128
#define SCNo32 "lo"
#define _AVR_SFR_DEFS_H_ 1
#define USART_RX_vect _VECTOR(18)
#define SCNuLEAST16 "u"
#define B10100000 160
#define UINT_FAST16_MAX UINT16_MAX
#define DISPLAY 0x1
#define B0001000 8
#define __WINT_MIN__ (-__WINT_MAX__ - 1)
#define fdev_setup_stream(stream,p,g,f) do { (stream)->put = p; (stream)->get = g; (stream)->flags = f; (stream)->udata = 0; } while(0)
#define ICR1L1 1
#define B10100010 162
#define B10100011 163
#define HardwareSerial_h 
#define PGWRT 2
#define __LPM_float_tiny__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; float __result; __asm__ ( "ld %A0, z+" "\n\t" "ld %B0, z+" "\n\t" "ld %C0, z+" "\n\t" "ld %D0, z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
#define UINT16_C(value) __CONCAT(value, U)
#define SCNuLEAST32 "lu"
#define COM0A0 6
#define COM0A1 7
#define EXIT_FAILURE 1
#define ADATE 5
#define _SIZE_T_DEFINED_ 
#define COM0B0 4
#define COM0B1 5
#define B1010 10
#define FUSE_CKSEL0 (unsigned char)~_BV(0)
#define FUSE_CKSEL1 (unsigned char)~_BV(1)
#define FUSE_CKSEL2 (unsigned char)~_BV(2)
#define FUSE_CKSEL3 (unsigned char)~_BV(3)
#define fminf fmin
#define __ULLFRACT_MIN__ 0.0ULLR
#define _SFR_IO8(io_addr) _MMIO_BYTE((io_addr) + __SFR_OFFSET)
#define B110000 48
#define B110001 49
#define __SCHAR_MAX__ 127
#define pgm_read_dword_near(address_short) __LPM_dword((uint16_t)(address_short))
#define TIMER0_COMPB_vect_num 15
#define PCINT0 0
#define PCINT1 1
#define PCINT2 2
#define PCINT3 3
#define PCINT4 4
#define PCINT5 5
#define PCINT6 6
#define PCINT7 7
#define PCINT8 0
#define PCINT9 1
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
#define clearerror(s) do { (s)->flags &= ~(__SERR | __SEOF); } while(0)
#define GPIOR20 0
#define B00010010 18
#define B00010011 19
#define SCNxFAST16 "x"
#define B110010 50
#define B110011 51
#define B1001000 72
#define __INT64_C(c) c ## LL
#define PRIxLEAST8 "x"
#define UCSR0A _SFR_MEM8(0xC0)
#define UCSR0B _SFR_MEM8(0xC1)
#define UCSR0C _SFR_MEM8(0xC2)
#define __DBL_DIG__ 6
#define __AVR_LIBC_VERSION__ 10800UL
#define _AVR_PORTPINS_H_ 1
#define __GCC_ATOMIC_POINTER_LOCK_FREE 1
#define SLEEP_MODE_PWR_DOWN (0x02<<1)
#define B11001100 204
#define B11001101 205
#define SCNxFAST32 "lx"
#define __LPM_dword(addr) __LPM_dword_enhanced__(addr)
#define B11001110 206
#define B11001111 207
#define B00100 4
#define B00101 5
#define __AVR_HAVE_SPH__ 1
#define B10000011 131
#define __LLACCUM_MIN__ (-0X1P15LLK-0X1P15LLK)
#define __BUILTIN_AVR_KBITS 1
#define __AVR_LIBC_DATE_ 20111229UL
#define B01101000 104
#define B01101001 105
#define __BUILTIN_AVR_ABSK 1
#define getchar() fgetc(stdin)
#define __BUILTIN_AVR_ABSR 1
#define B00110 6
#define B00111 7
#define __SIZEOF_INT__ 2
#define __SIZEOF_POINTER__ 2
#define SPI2X 0
#define B01101010 106
#define B01101011 107
#define WDCE 4
#define Print_h 
#define bitWrite(value,bit,bitvalue) (bitvalue ? bitSet(value, bit) : bitClear(value, bit))
#define PRIuLEAST16 "u"
#define OCF0A 1
#define B11000 24
#define B11001 25
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 1
#define squaref square
#define __USACCUM_IBIT__ 8
#define PRIuFAST16 "u"
#define B11010 26
#define B11011 27
#define __USER_LABEL_PREFIX__ 
#define EICRA _SFR_MEM8(0x69)
#define B0000100 4
#define B0000101 5
#define PRIuLEAST32 "lu"
#define B11111100 252
#define B11111101 253
#define TCNT2_0 0
#define TCNT2_1 1
#define TCNT2_2 2
#define TCNT2_3 3
#define TCNT2_4 4
#define TCNT2_5 5
#define TCNT2_6 6
#define TCNT2_7 7
#define tanhf tanh
#define B0000110 6
#define PRIuFAST32 "lu"
#define __CONCAT(left,right) __CONCATenate(left, right)
#define UINT8_MAX (__CONCAT(INT8_MAX, U) * 2U + 1U)
#define ISC10 2
#define _FDEV_SETUP_WRITE __SWR
#define B11111110 254
#define __STDC_HOSTED__ 1
#define SPI_STC_vect _VECTOR(17)
#define B0011000 24
#define B0011001 25
#define __LDBL_HAS_INFINITY__ 1
#define TOV0 0
#define TOV1 0
#define TOV2 0
#define _STDIO_H_ 1
#define PINB6 6
#define __AVR_LIBC_MAJOR__ 1
#define _SFR_MEM_ADDR(sfr) ((uint16_t) &(sfr))
#define EXTRF 1
#define B0011010 26
#define __ATTR_PROGMEM__ __attribute__((__progmem__))
#define WDIE 6
#define WDIF 7
#define __LFRACT_MIN__ (-0.5LR-0.5LR)
#define __HA_IBIT__ 8
#define degrees(rad) ((rad)*RAD_TO_DEG)
#define B10011000 152
#define _BSD_SIZE_T_DEFINED_ 
#define HIGH 0x1
#define B10011001 153
#define EEAR1 1
#define EEAR2 2
#define EEAR3 3
#define EEAR4 4
#define EEAR5 5
#define EEAR6 6
#define EEAR7 7
#define EEAR8 0
#define EEAR9 1
#define __TQ_IBIT__ 0
#define EEARH _SFR_IO8(0x22)
#define RXB80 1
#define EEARL _SFR_IO8(0x21)
#define B0110100 52
#define B0110101 53
#define __FLT_EPSILON__ 1.19209290e-7F
#define B10111010 186
#define __GXX_WEAK__ 1
#define __LPM_enhanced__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); uint8_t __result; __asm__ __volatile__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; }))
#define B0110110 54
#define B0110111 55
#define PGERS 1
#define RAMSTART (0x100)
#define SMCR _SFR_IO8(0x33)
#define bitRead(value,bit) (((value) >> (bit)) & 0x01)
#define SIGNAL(vector) extern "C" void vector(void) __attribute__ ((signal, __INTR_ATTRS)); void vector (void)
#define UDR0_4 4
#define _MMIO_BYTE(mem_addr) (*(volatile uint8_t *)(mem_addr))
#define UDR0_5 5
#define __USFRACT_IBIT__ 0
#define __LDBL_MIN__ 1.17549435e-38L
#define AVR_STATUS_REG SREG
#define __FRACT_MIN__ (-0.5R-0.5R)
#define TIMER0_COMPA_vect _VECTOR(14)
#define __AVR_SFR_OFFSET__ 0x20
#define OUTPUT 0x1
#define __DEC32_MAX__ 9.999999E96DF
#define __AVR_HAVE_PRR_PRTIM0 
#define __AVR_HAVE_PRR_PRTIM1 
#define __AVR_HAVE_PRR_PRTIM2 
#define B00000000 0
#define B00000001 1
#define B01100011 99
#define B100000 32
#define __DA_IBIT__ 32
#define WDP0 0
#define WDP1 1
#define WDP2 2
#define WDP3 5
#define LOCKBITS_DEFAULT (0xFF)
#define B00000010 2
#define B00000011 3
#define _WCHAR_T_ 
#define PCINT0_vect_num 3
#define B100010 34
#define B100011 35
#define __AVR_LIBC_VERSION_STRING__ "1.8.0svn"
#define SLEEP_MODE_ADC (0x01<<1)
#define GPIOR00 0
#define GPIOR01 1
#define __INT32_MAX__ 2147483647L
#define GPIOR03 3
#define GPIOR04 4
#define GPIOR06 6
#define GPIOR07 7
#define __SFR_OFFSET 0x20
#define OCR1BH0 0
#define OCR1BH1 1
#define OCR1BH2 2
#define OCR1BH3 3
#define OCR1BH4 4
#define OCR1BH5 5
#define SCNoLEAST16 "o"
#define OCR1BH7 7
#define WDRF 3
#define __UQQ_FBIT__ 8
#define __SIZEOF_LONG__ 4
#define __UACCUM_MAX__ 0XFFFFFFFFP-16UK
#define pgm_read_ptr_near(address_short) (void*)__LPM_word((uint16_t)(address_short))
#define __LPM_word_classic__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); uint16_t __result; __asm__ __volatile__ ( "lpm" "\n\t" "mov %A0, r0" "\n\t" "adiw r30, 1" "\n\t" "lpm" "\n\t" "mov %B0, r0" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) : "r0" ); __result; }))
#define GPIOR10 0
#define GPIOR11 1
#define GPIOR12 2
#define GPIOR13 3
#define GPIOR15 5
#define GPIOR16 6
#define GPIOR17 7
#define PRIoFAST16 "o"
#define ferror(s) ((s)->flags & __SERR)
#define GPIOR21 1
#define __UINT16_C(c) c ## U
#define GPIOR23 3
#define GPIOR24 4
#define GPIOR25 5
#define GPIOR26 6
#define GPIOR27 7
#define B10010100 148
#define B10010101 149
#define M_2_PI 0.63661977236758134308
#define SCNoLEAST32 "lo"
#define ZH r31
#define __DECIMAL_DIG__ 9
#define __LFRACT_EPSILON__ 0x1P-31LR
#define PGM_VOID_P const prog_void *
#define RWWSRE 4
#define CAL1 1
#define CAL3 3
#define CAL4 4
#define CAL5 5
#define CAL6 6
#define CAL7 7
#define B10010110 150
#define B10010111 151
#define __AVR_2_BYTE_PC__ 1
#define SCNdLEAST16 "d"
#define B00110000 48
#define B00110001 49
#define OCR1AH _SFR_MEM8(0x89)
#define PRIoFAST32 "lo"
#define OCR1AL _SFR_MEM8(0x88)
#define __ULFRACT_MIN__ 0.0ULR
#define B0000111 7
#define B01000 8
#define B01001 9
#define INPUT 0x0
#define INT_FAST16_MAX INT16_MAX
#define OCR1BL0 0
#define OCR1BL1 1
#define OCR1BL2 2
#define OCR1BL3 3
#define OCR1BL4 4
#define OCR1BL5 5
#define OCR1BL6 6
#define OCR1BL7 7
#define B00110010 50
#define __has_include_next(STR) __has_include_next__(STR)
#define OCR1BH _SFR_MEM8(0x8B)
#define OCR1BL _SFR_MEM8(0x8A)
#define pgm_read_ptr(address_short) pgm_read_ptr_near(address_short)
#define __ATTR_CONST__ __attribute__((__const__))
#define SIGRD 5
#define B01010 10
#define B01011 11
#define ADPS0 0
#define ADPS1 1
#define _VECTOR(N) __vector_ ## N
#define SCNdLEAST32 "ld"
#define __BUILTIN_AVR_ULLRBITS 1
#define PTRDIFF_MAX INT16_MAX
#define TCNT1H _SFR_MEM8(0x85)
#define PRIX8 "X"
#define B11101100 236
#define PRIoLEAST16 "o"
#define _AVR_IOXXX_H_ "iom328p.h"
#define __LDBL_HAS_QUIET_NAN__ 1
#define INT64_C(value) __CONCAT(value, LL)
#define PINC0 0
#define _SFR_MEM8(mem_addr) _MMIO_BYTE(mem_addr)
#define __ULACCUM_IBIT__ 32
#define B11101110 238
#define B0001001 9
#define B11110100 244
#define __UACCUM_EPSILON__ 0x1P-16UK
#define log10f log10
#define PRTWI 7
#define __BUILTIN_AVR_SEI 1
#define B0001010 10
#define B0001011 11
#define ___int_wchar_t_h 
#define __GNUC__ 4
#define B01011100 92
#define B01011101 93
#define __ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-48ULLK
#define __AVR_ATmega328P__ 1
#define __HQ_IBIT__ 0
#define B01000010 66
#define round(x) ((x)>=0?(long)((x)+0.5):(long)((x)-0.5))
#define B01011111 95
#define FUSE_BODLEVEL0 (unsigned char)~_BV(0)
#define FUSE_BODLEVEL1 (unsigned char)~_BV(1)
#define FUSE_BODLEVEL2 (unsigned char)~_BV(2)
#define __BUILTIN_AVR_SWAP 1
#define B1100111 103
#define OCR0B _SFR_IO8(0x28)
#define __FLT_HAS_DENORM__ 1
#define __SIZEOF_LONG_DOUBLE__ 4
#define B0100100 36
#define B0100101 37
#define __LOCK_BITS_EXIST 
#define PRIoLEAST32 "lo"
#define OCR1A _SFR_MEM16(0x88)
#define OCR1B _SFR_MEM16(0x8A)
#define INTF0 0
#define INTF1 1
#define INT_FAST16_MIN INT16_MIN
#define B0100110 38
#define B0100111 39
#define _FDEV_SETUP_RW (__SRD|__SWR)
#define PRIdLEAST16 "d"
#define OCR2A _SFR_MEM8(0xB3)
#define _SFR_MEM32(mem_addr) _MMIO_DWORD(mem_addr)
#define SEEK_CUR 1
#define __BIGGEST_ALIGNMENT__ 1
#define PTRDIFF_MIN INT16_MIN
#define B0111000 56
#define B0111001 57
#define loop_until_bit_is_clear(sfr,bit) do { } while (bit_is_set(sfr, bit))
#define TIMER0_COMPA_vect_num 14
#define PCIFR _SFR_IO8(0x1B)
#define __UINT24_MAX__ 16777215UL
#define PRIdLEAST32 "ld"
#define EEPM0 4
#define EEPM1 5
#define B0111011 59
#define _AVR_INTERRUPT_H_ 
#define __BUILTIN_AVR_NOP 1
#define ADCL2 2
#define clockCyclesPerMicrosecond() ( F_CPU / 1000000L )
#define __GNUC_STDC_INLINE__ 1
#define SERIAL_8E1 0x26
#define SERIAL_8E2 0x2E
#define ICES1 6
#define __DQ_IBIT__ 0
#define TWA0 1
#define TWA1 2
#define TWA2 3
#define TWA3 4
#define EXIT_SUCCESS 0
#define TWA5 6
#define TWA6 7
#define digitalPinHasPWM(p) (((p) >= 2 && (p) <= 13) || ((p) >= 44 && (p)<= 46))
#define __DBL_MAX__ double(3.40282347e+38L)
#define TWAR _SFR_MEM8(0xBA)
#define PRIiFAST16 "i"
#define __ULFRACT_IBIT__ 0
#define __cpp_raw_strings 200710
#define __INT_FAST32_MAX__ 2147483647L
#define _FDEV_SETUP_READ __SRD
#define __DBL_HAS_INFINITY__ 1
#define TWBR _SFR_MEM8(0xB8)
#define FUSE_MEMORY_SIZE 3
#define PRId8 "d"
#define __INT64_MAX__ 9223372036854775807LL
#define PRIiFAST32 "li"
#define TWCR _SFR_MEM8(0xBC)
#define stdin (__iob[0])
#define PRIi16 "i"
#define USBS0 3
#define TWD0 0
#define TWD1 1
#define TWD2 2
#define TWD4 4
#define __ACCUM_IBIT__ 16
#define TWD6 6
#define TWD7 7
#define B00111010 58
#define TWDR _SFR_MEM8(0xBB)
#define __DEC32_MIN_EXP__ (-94)
#define B10000100 132
#define B10000101 133
#define B0011 3
#define analogInPinToBit(P) (P)
#define TWEA 6
#define TIMER0_COMPB_vect _VECTOR(15)
#define _AVR_COMMON_H 
#define __BUILTIN_AVR_UKBITS 1
#define TWEN 2
#define B01011110 94
#define PRIi32 "li"
#define ADCH _SFR_MEM8(0x79)
#define ADCL _SFR_MEM8(0x78)
#define ADCW _SFR_MEM16(0x78)
#define B10000110 134
#define ISC00 0
#define ISC01 1
#define B00100000 32
#define __BUILTIN_AVR_FMULSU 1
#define B11101011 235
#define __LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK
#define OCF2A 1
#define bitClear(value,bit) ((value) &= ~(1UL << (bit)))
#define PINB0 0
#define PINB1 1
#define PINB2 2
#define PINB3 3
#define PINB4 4
#define PINB5 5
#define PINB7 7
#define __INT_FAST16_TYPE__ int
#define B00100010 34
#define B00100011 35
#define MCUCR _SFR_IO8(0x35)
#define _VECTORS_SIZE (26 * 4)
#define B1010000 80
#define B1010001 81
#define _SIZE_T_DEFINED 
#define ADEN 7
#define lroundf lround
#define _WCHAR_T_DEFINED_ 
#define PRIi8 "i"
#define PINC1 1
#define PINC2 2
#define PINC3 3
#define PINC4 4
#define PINC5 5
#define PINC6 6
#define B010100 20
#define B010101 21
#define B10011010 154
#define B10011011 155
#define B1010010 82
#define B1010011 83
#define AVR_STACK_POINTER_HI_REG SPH
#define UINT_LEAST8_MAX UINT8_MAX
#define analogInputToDigitalPin(p) ((p < 16) ? (p) + 54 : -1)
#define __LDBL_HAS_DENORM__ 1
#define OCR1AH1 1
#define PIND0 0
#define PIND1 1
#define PIND2 2
#define PIND3 3
#define SCNiLEAST16 "i"
#define PIND5 5
#define PIND6 6
#define PIND7 7
#define B010110 22
#define B010111 23
#define TWIE 0
#define isinff isinf
#define SERIAL_8N1 0x06
#define SERIAL_8N2 0x0E
#define DDC2 2
#define B11110000 240
#define __BUILTIN_AVR_BITSK 1
#define EXTERNAL 0
#define __BUILTIN_AVR_BITSR 1
#define __cplusplus 201103L
#define ICIE1 5
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __LPM_word_enhanced__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); uint16_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
#define B11001000 200
#define __INT_LEAST32_MAX__ 2147483647L
#define INFINITY __builtin_inf()
#define __USING_SJLJ_EXCEPTIONS__ 1
#define _GCC_WRAP_STDINT_H 
#define DDC5 5
#define SERIAL_8O2 0x3E
#define B010000 16
#define B10110100 180
#define B10110101 181
#define __DEC32_MIN__ 1E-95DF
#define PIND4 4
#define B010001 17
#define TCNT1H6 6
#define CPHA 2
#define true 0x1
#define SCNiLEAST32 "li"
#define __ACCUM_MAX__ 0X7FFFFFFFP-15K
#define __DEPRECATED 1
#define ADIE 3
#define ADIF 4
#define B10110110 182
#define B10110111 183
#define AVR_STACK_POINTER_ADDR _SFR_IO_ADDR(SP)
#define SPMEN 0
#define __DBL_MAX_EXP__ 128
#define B01001101 77
#define MUX0 0
#define MUX1 1
#define MUX2 2
#define MUX3 3
#define __USACCUM_EPSILON__ 0x1P-8UHK
#define ICR1L _SFR_MEM8(0x86)
#define UDRIE0 5
#define __AVR_HAVE_PRR ((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI))
#define TCCR0A _SFR_IO8(0x24)
#define TCCR0B _SFR_IO8(0x25)
#define __DEC128_EPSILON__ 1E-33DL
#define ADC_vect_num 21
#define UCSZ00 1
#define UCSZ01 2
#define UCSZ02 2
#define B01001110 78
#define B01001111 79
#define AIN0D 0
#define ADCH0 0
#define ADTS2 2
#define __SFRACT_MAX__ 0X7FP-7HR
#define __FRACT_IBIT__ 0
#define TCCR1A _SFR_MEM8(0x80)
#define TCCR1B _SFR_MEM8(0x81)
#define TCCR1C _SFR_MEM8(0x82)
#define _VA_LIST_ 
#define PRIo8 "o"
#define __PTRDIFF_MAX__ 32767
#define B0100000 32
#define AIN1D 1
#define __UACCUM_MIN__ 0.0UK
#define TCCR2A _SFR_MEM8(0xB0)
#define TCCR2B _SFR_MEM8(0xB1)
#define OCR0A _SFR_IO8(0x27)
#define __AVR_ENHANCED__ 1
#define SCNdFAST16 "d"
#define __UACCUM_IBIT__ 16
#define SPMIE 7
#define __BUILTIN_AVR_WDR 1
#define B0101000 40
#define B0101001 41
#define PRIx8 "x"
#define B0101010 42
#define B0101011 43
#define SCNdFAST32 "ld"
#define __GNUG__ 4
#define _T_WCHAR 
#define B01111100 124
#define B01111101 125
#define __LONG_LONG_MAX__ 9223372036854775807LL
#define CPOL 3
#define __SIZEOF_SIZE_T__ 2
#define __ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK
#define _WCHAR_T 
#define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))
#define OCR2AUB 3
#define SCNiPTR SCNi16
#define B01111110 126
#define B01111111 127
#define TWS3 3
#define TWS4 4
#define TWS5 5
#define TWS6 6
#define TWS7 7
#define __cpp_rvalue_reference 200610
#define TWI_vect_num 24
#define PRIu8 "u"
#define SIZE_MAX (__CONCAT(INT16_MAX, U))
#define __SIZEOF_WINT_T__ 2
#define UCPOL0 0
#define PRIiLEAST32 "li"
#define TWWC 3
#define UINT64_C(value) __CONCAT(value, ULL)
#define MCUSR _SFR_IO8(0x34)
#define INT32_MIN (-INT32_MAX - 1L)
#define ADSC 6
#define DDB0 0
#define DDB1 1
#define DDB2 2
#define DDB3 3
#define DDB4 4
#define DDB5 5
#define DDB6 6
#define DDB7 7
#define INPUT_PULLUP 0x2
#define _GCC_WCHAR_T 
#define DDC0 0
#define DDC1 1
#define __SA_IBIT__ 16
#define DDC3 3
#define DDC4 4
#define PRIiFAST8 "i"
#define DDC6 6
#define UINTPTR_MAX UINT16_MAX
#define __ULLACCUM_MIN__ 0.0ULLK
#define B100 4
#define B101 5
#define __BUILTIN_AVR_ROUNDUHK 1
#define __BUILTIN_AVR_ROUNDUHR 1
#define DDD0 0
#define DDD1 1
#define DDD2 2
#define DDD3 3
#define DDD4 4
#define DDD5 5
#define DDD6 6
#define DDD7 7
#define __GXX_ABI_VERSION 1002
#define B110 6
#define B111 7
#define __INT24_MAX__ 8388607L
#define __UTA_FBIT__ 48
#define WDE 3
#define __FLT_MIN_EXP__ (-125)
#define B10001000 136
#define B10001001 137
#define _AVR_IOM328P_H_ 1
#define B1000001 65
#define _SFR_IO_REG_P(sfr) (_SFR_MEM_ADDR(sfr) < 0x40 + __SFR_OFFSET)
#define __USFRACT_MAX__ 0XFFP-8UHR
#define __UFRACT_IBIT__ 0
#define M_LOG2E 1.4426950408889634074
#define B0100 4
#define B0101 5
#define B000100 4
#define B000101 5
#define B10001010 138
#define B10001011 139
#define B1000010 66
#define B1000011 67
#define __BUILTIN_AVR_ROUNDFX 1
#define pgm_read_word(address_short) pgm_read_word_near(address_short)
#define B0110 6
#define B0111 7
#define B000110 6
#define B000111 7
#define __BUILTIN_AVR_ROUNDULK 1
#define __BUILTIN_AVR_ROUNDULR 1
#define TIMER2_COMPB_vect_num 8
#define B11 3
#define UDRE0 5
#define USART_UDRE_vect_num 19
#define __cpp_lambdas 200907
#define signbitf signbit
#define va_end(v) __builtin_va_end(v)
#define B11110011 243
#define __BUILTIN_AVR_COUNTLSLLK 1
#define __SUNGET 0x040
#define __BUILTIN_AVR_COUNTLSLLR 1
#define __BUILTIN_AVR_ROUNDHK 1
#define B11100111 231
#define __INT_FAST64_TYPE__ long long int
#define __BUILTIN_AVR_ROUNDHR 1
#define B011000 24
#define B011001 25
#define B10100101 165
#define FUSE_BOOTSZ0 (unsigned char)~_BV(1)
#define FUSE_BOOTSZ1 (unsigned char)~_BV(2)
#define B00001 1
#define B011010 26
#define B011011 27
#define B10100111 167
#define atan2f atan2
#define _SFR_ASM_COMPAT 0
#define __DBL_MIN__ double(1.17549435e-38L)
#define _VA_LIST 
#define PRIx16 "x"
#define COM1A0 6
#define COM1A1 7
#define B10111000 184
#define B10111001 185
#define B1110000 112
#define B1110001 113
#define __LPM_tiny__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; uint8_t __result; __asm__ ( "ld %0, z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; }))
#define COM1B0 4
#define COM1B1 5
#define B00010100 20
#define B00010101 21
#define FLASHEND 0x7FFF
#define B110100 52
#define B10111011 187
#define B1110010 114
#define __USING_MINT8 0
#define __BUILTIN_AVR_COUNTLSK 1
#define PRIx32 "lx"
#define __BUILTIN_AVR_ROUNDLK 1
#define __BUILTIN_AVR_COUNTLSR 1
#define __BUILTIN_AVR_ROUNDLR 1
#define CLKPCE 7
#define B00010110 22
#define B00010111 23
#define __FLT_MIN_10_EXP__ (-37)
#define B11011000 216
#define TXCIE0 6
#define B110110 54
#define B110111 55
#define SERIAL_7N1 0x04
#define RAMEND 0x8FF
#define TWI_vect _VECTOR(24)
#define SERIAL_8O1 0x36
#define __LACCUM_MIN__ (-0X1P31LK-0X1P31LK)
#define cosf cos
#define PCINT0_vect _VECTOR(3)
#define __ULLACCUM_FBIT__ 48
#define B111100 60
#define B01101100 108
#define B01101101 109
#define ADMUX _SFR_MEM8(0x7C)
#define B111101 61
#define SPM_READY_vect _VECTOR(25)
#define INT_LEAST8_MAX INT8_MAX
#define OCIE0A 1
#define OCIE0B 2
#define __BOOT_LOCK_BITS_0_EXIST 
#define __BUILTIN_AVR_LKBITS 1
#define __ATTR_MALLOC__ __attribute__((__malloc__))
#define B01101110 110
#define B01101111 111
#define _AVR_IO_H_ 
#define OCIE1A 1
#define OCIE1B 2
#define __ULLFRACT_EPSILON__ 0x1P-64ULLR
#define DDRB _SFR_IO8(0x04)
#define DDRC _SFR_IO8(0x07)
#define DDRD _SFR_IO8(0x0A)
#define B0 0
#define NOT_A_PORT 0
#define OCIE2A 1
#define OCIE2B 2
#define AVR_STACK_POINTER_LO_REG SPL
#define __DEC128_MIN__ 1E-6143DL
#define B11110 30
#define B11111 31
#define LFUSE_DEFAULT (FUSE_CKSEL0 & FUSE_CKSEL2 & FUSE_CKSEL3 & FUSE_SUT0 & FUSE_CKDIV8)
#define __REGISTER_PREFIX__ 
#define __UINT16_MAX__ 65535U
#define __AVR_HAVE_PRR_PRSPI 
#define _HAVE_AVR_STACK_POINTER_HI 1
#define __DBL_HAS_DENORM__ 1
#define INT_LEAST32_MAX INT32_MAX
#define copysignf copysign
#define __BUILTIN_AVR_ULKBITS 1
#define PGM_P const prog_char *
#define B1111011 123
#define B11100 28
#define B11010000 208
#define __ACCUM_MIN__ (-0X1P15K-0X1P15K)
#define B11101 29
#define __AVR_ARCH__ 5
#define _SFR_IO16(io_addr) _MMIO_WORD((io_addr) + __SFR_OFFSET)
#define Character_h 
#define __SQ_IBIT__ 0
#define B11010010 210
#define B11010011 211
#define DD0 0
#define DD1 1
#define DD2 2
#define DD3 3
#define DD4 4
#define DD5 5
#define DD6 6
#define DD7 7
#define DOR0 3
#define __UINT8_TYPE__ unsigned char
#define _SFR_IO_ADDR(sfr) (_SFR_MEM_ADDR(sfr) - __SFR_OFFSET)
#define DORD 5
#define __BUILTIN_AVR_ROUNDUK 1
#define __BUILTIN_AVR_ROUNDUR 1
#define __UHA_FBIT__ 8
#define B0011100 28
#define B0011101 29
#define DEC 10
#define __SFRACT_MIN__ (-0.5HR-0.5HR)
#define frexpf frexp
#define __UTQ_FBIT__ 128
#define ANALOG_COMP_vect_num 23
#define B0011110 30
#define B0011111 31
#define MSBFIRST 1
#define __AVR_HAVE_PRR_PRADC 
#define __FLT_MANT_DIG__ 24
#define SERIAL_5E1 0x20
#define SERIAL_5E2 0x28
#define INT_LEAST8_MIN INT8_MIN
#define TWSTA 5
#define __VERSION__ "4.9.2"
#define TWSTO 4
#define sei() __asm__ __volatile__ ("sei" ::: "memory")
#define UINT_LEAST16_MAX UINT16_MAX
#define __UINT64_C(c) c ## ULL
#define PRIXLEAST16 "X"
#define __ULLFRACT_FBIT__ 64
#define __cpp_unicode_characters 200704
#define String_class_h 
#define SCNi16 "i"
#define CS02 2
#define B1000 8
#define B1001 9
#define B001000 8
#define B001001 9
#define EEMPE 2
#define __FRACT_EPSILON__ 0x1P-15R
#define __ULACCUM_MIN__ 0.0ULK
#define PORTC1 1
#define INT_LEAST32_MIN INT32_MIN
#define PRIXLEAST32 "lX"
#define B0110011 51
#define __UDA_FBIT__ 32
#define B1011 11
#define sinf sin
#define B001010 10
#define B001011 11
#define __INT_WCHAR_T_H 
#define B00011 3
#define __INTR_ATTRS used, externally_visible
#define SCNi32 "li"
#define ISR_BLOCK 
#define CLKPS0 0
#define CLKPS1 1
#define CLKPS2 2
#define CLKPS3 3
#define ASSR _SFR_MEM8(0xB6)
#define __LLACCUM_EPSILON__ 0x1P-47LLK
#define B10101000 168
#define B10101001 169
#define B1100000 96
#define B1100001 97
#define __GCC_ATOMIC_INT_LOCK_FREE 1
#define _FDEV_EOF (-2)
#define B00000100 4
#define B00000101 5
#define __CTYPE_H_ 1
#define B100100 36
#define B100101 37
#define B10101010 170
#define B10101011 171
#define B1100010 98
#define B1100011 99
#define __SSTR 0x0004
#define E2END 0x3FF
#define B00000110 6
#define B00000111 7
#define B100110 38
#define B100111 39
#define INT1_vect_num 2
#define SERIAL_7O1 0x34
#define Printable_h 
#define OCR2B _SFR_MEM8(0xB4)
#define ceilf ceil
#define DTOSTR_PLUS_SIGN 0x02
#define B00011000 24
#define B00011001 25
#define B111000 56
#define B111001 57
#define _SYS_SIZE_T_H 
#define __BUILTIN_AVR_BITSUHK 1
#define FILE struct __file
#define __BUILTIN_AVR_BITSUHR 1
#define _FDEV_ERR (-1)
#define SERIAL_5N1 0x00
#define SERIAL_5N2 0x08
#define B00011011 27
#define B111010 58
#define B111011 59
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define TWAM0 0
#define TWAM1 1
#define TWAM2 2
#define TWAM3 3
#define TWAM4 4
#define TWAM5 5
#define EXCLK 6
#define SCNoPTR SCNo16
#define SERIAL_7E2 0x2C
#define SERIAL_5O1 0x30
#define SERIAL_5O2 0x38
#define __SIZE_T__ 
#define __USFRACT_MIN__ 0.0UHR
#define TWAMR _SFR_MEM8(0xBD)
#define SIG_ATOMIC_MAX INT8_MAX
#define TIMER0_OVF_vect_num 16
#define __SRD 0x0001
#define UDR0 _SFR_MEM8(0xC6)
#define SPM_READY_vect_num 25
#define B00110100 52
#define B00110101 53
#define __CONCATenate(left,right) left ## right
#define B01100 12
#define B01101 13
#define SERIAL 0x0
#define B11010101 213
#define INT32_MAX 0x7fffffffL
#define B00110110 54
#define B00110111 55
#define __BUILTIN_AVR_BITSULK 1
#define __ULLACCUM_IBIT__ 16
#define __BUILTIN_AVR_BITSULR 1
#define __UQQ_IBIT__ 0
#define B01110 14
#define B01111 15
#define DIDR0 _SFR_MEM8(0x7E)
#define DIDR1 _SFR_MEM8(0x7F)
#define HALF_PI 1.5707963267948966192313216916398
#define B11000000 192
#define B11000001 193
#define B1000111 71
#define B11000010 194
#define B11000011 195
#define __BUILTIN_AVR_LLRBITS 1
#define B10100001 161
#define __BUILTIN_AVR_BITSULLK 1
#define __BUILTIN_AVR_BITSULLR 1
#define PCINT1_vect _VECTOR(4)
#define __INT32_C(c) c ## L
#define __DEC64_EPSILON__ 1E-15DD
#define __ORDER_PDP_ENDIAN__ 3412
#define __DEC128_MIN_EXP__ (-6142)
#define __UHQ_FBIT__ 16
#define EFUSE_DEFAULT (0xFF)
#define __LLACCUM_FBIT__ 47
#define B0001100 12
#define B0001101 13
#define __SWR 0x0002
#define __va_copy(d,s) __builtin_va_copy(d,s)
#define __BUILTIN_AVR_ROUNDULLK 1
#define PCIE2 2
#define __BUILTIN_AVR_ROUNDULLR 1
#define TIMER1_COMPA_vect _VECTOR(11)
#define B0001110 14
#define B0001111 15
#define digitalPinToPort(P) ( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )
#define __INT_FAST32_TYPE__ long int
#define __BUILTIN_AVR_HRBITS 1
#define TIMER2_COMPA_vect_num 7
#define UINT64_MAX (__CONCAT(INT64_MAX, U) * 2ULL + 1ULL)
#define TIMER1_OVF_vect_num 13
#define _ANSI_STDARG_H_ 
#define ADC0D 0
#define SIG_ATOMIC_MIN INT8_MIN
#define __UINT_LEAST16_TYPE__ unsigned int
#define PRIuFAST8 "u"
#define SPE 6
#define GPIOR02 2
#define RAND_MAX 0x7FFF
#define SIGNATURE_0 0x1E
#define SIGNATURE_1 0x95
#define SIGNATURE_2 0x0F
#define ADC1D 1
#define B11110001 241
#define _STDARG_H 
#define LOCKBITS unsigned char __lock LOCKMEM
#define GPIOR05 5
#define __BUILTIN_AVR_UHRBITS 1
#define NOT_A_PIN 0
#define B00101001 41
#define PRUSART0 1
#define ADC2D 2
#define __INT16_MAX__ 32767
#define B11110010 242
#define _BSD_SIZE_T_ 
#define FUSE_SPIEN (unsigned char)~_BV(5)
#define __SIZE_TYPE__ unsigned int
#define M_2_SQRTPI 1.12837916709551257390
#define __UINT64_MAX__ 18446744073709551615ULL
#define _SIZE_T_DECLARED 
#define B01001100 76
#define __UDQ_FBIT__ 64
#define ADC3D 3
#define PORTD3 3
#define B0111100 60
#define B0111101 61
#define HEX 16
#define ADC4D 4
#define PORTD6 6
#define __INT8_TYPE__ signed char
#define B0111110 62
#define B0111111 63
#define PORTD7 7
#define EE_READY_vect _VECTOR(22)
#define B00011010 26
#define __ELF__ 1
#define ADC5D 5
#define AVR_STACK_POINTER_LO_ADDR _SFR_IO_ADDR(SPL)
#define __LPM_dword_tiny__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; uint32_t __result; __asm__ ( "ld %A0, z+" "\n\t" "ld %B0, z+" "\n\t" "ld %C0, z+" "\n\t" "ld %D0, z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
#define B100001 33
#define PCINT10 2
#define PCINT11 3
#define PCINT12 4
#define PCINT13 5
#define PCINT14 6
#define word(...) makeWord(__VA_ARGS__)
#define PCINT16 0
#define PCINT17 1
#define PCINT18 2
#define PCINT19 3
#define __ULFRACT_EPSILON__ 0x1P-32ULR
#define __LLFRACT_FBIT__ 63
#define B00001000 8
#define B00001001 9
#define PCINT20 4
#define PCINT21 5
#define PCINT22 6
#define __FLT_RADIX__ 2
#define PRIdLEAST8 "d"
#define B101001 41
#define __INT_LEAST16_TYPE__ int
#define __BUILTIN_AVR_ABSFX 1
#define __LDBL_EPSILON__ 1.19209290e-7L
#define INTPTR_MAX INT16_MAX
#define __UINTMAX_C(c) c ## ULL
#define XRAMSIZE 0
#define CLKPR _SFR_MEM8(0x61)
#define PRTIM0 5
#define PRTIM1 3
#define PRTIM2 6
#define B00001011 11
#define __INT24_MIN__ (-__INT24_MAX__-1)
#define B101011 43
#define SCNdPTR SCNd16
#define __SACCUM_MAX__ 0X7FFFP-7HK
#define SREG _SFR_IO8(0x3F)
#define __BUILTIN_AVR_ABSHR 1
#define isnanf isnan
#define _FFS(x) (1 + (((x) & 1) == 0) + (((x) & 3) == 0) + (((x) & 7) == 0) + (((x) & 017) == 0) + (((x) & 037) == 0) + (((x) & 077) == 0) + (((x) & 0177) == 0) + (((x) & 0377) == 0) + (((x) & 0777) == 0) + (((x) & 01777) == 0) + (((x) & 03777) == 0) + (((x) & 07777) == 0) + (((x) & 017777) == 0) + (((x) & 037777) == 0) + (((x) & 077777) == 0) - (((x) & 0177777) == 0) * 16)
#define B11010001 209
#define SCNx16 "x"
#define __LPM(addr) __LPM_enhanced__(addr)
#define __SIG_ATOMIC_MAX__ 127
#define _SFR_WORD(sfr) _MMIO_WORD(_SFR_ADDR(sfr))
#define RXCIE0 7
#define B00100100 36
#define B00100101 37
#define GPIOR0 _SFR_IO8(0x1E)
#define GPIOR1 _SFR_IO8(0x2A)
#define GPIOR2 _SFR_IO8(0x2B)
#define SCNxLEAST32 "lx"
#define B11010110 214
#define ISR_NAKED __attribute__((naked))
#define PRIu16 "u"
#define B00100110 38
#define B00100111 39
#define B10011101 157
#define B1010100 84
#define B1010101 85
#define INT_LEAST64_MAX INT64_MAX
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 1
#define SCNx32 "lx"
#define B10011110 158
#define B10011111 159
#define UDR0_0 0
#define UDR0_1 1
#define UDR0_2 2
#define UDR0_3 3
#define UDR0_6 6
#define UDR0_7 7
#define UINT32_MAX (__CONCAT(INT32_MAX, U) * 2UL + 1UL)
#define logf log
#define __SIZEOF_PTRDIFF_T__ 2
#define B00111000 56
#define B00111001 57
#define __AVR 1
#define SEEK_SET 0
#define PRIu32 "lu"
#define __BUILTIN_AVR_ABSLK 1
#define AVR_STATUS_ADDR _SFR_IO_ADDR(SREG)
#define __BUILTIN_AVR_ABSLR 1
#define expf exp
#define SM0 1
#define SM1 2
#define SM2 3
#define B00111011 59
#define acosf acos
#define U2X0 1
#define TWD3 3
#define TIMER2_OVF_vect_num 9
#define TWAM6 6
#define INTPTR_MIN INT16_MIN
#define INT8_C(value) ((int8_t) value)
#define BADISR_vect __vector_default
#define TWD5 5
#define radians(deg) ((deg)*DEG_TO_RAD)
#define CHANGE 1
#define __LACCUM_EPSILON__ 0x1P-31LK
#define interrupts() sei()
#define UBRR0 _SFR_MEM16(0xC4)
#define _SIZE_T_ 
#define SPH _SFR_IO8(0x3E)
#define SPL _SFR_IO8(0x3D)
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __SPGM 0x0008
#define UINT_FAST32_MAX UINT32_MAX
#define _WCHAR_T_H 
#define PRIxLEAST16 "x"
#define REFS0 6
#define REFS1 7
#define B11100001 225
#define NEW_H 
#define __INT_FAST16_MAX__ 32767
#define GPIOR14 4
#define hypotf hypot
#define B01001000 72
#define B01001001 73
#define B00101011 43
#define B11100010 226
#define B11100011 227
#define INT_LEAST64_MIN INT64_MIN
#define isfinitef isfinite
#define PSRASY 1
#define digitalPinToPCMSK(p) ( (((p) >= 10) && ((p) <= 13)) || (((p) >= 50) && ((p) <= 53)) ? (&PCMSK0) : ( (((p) >= 62) && ((p) <= 69)) ? (&PCMSK2) : ((uint8_t *)0) ) )
#define B01110111 119
#define PCINT2_vect _VECTOR(5)
#define PRIxLEAST32 "lx"
#define __UINT_FAST32_MAX__ 4294967295UL
#define PORT1 1
#define PORT2 2
#define PORT4 4
#define PORT5 5
#define PORT6 6
#define PORT7 7
#define __UINT_LEAST64_TYPE__ long long unsigned int
#define ACD 7
#define __USACCUM_MAX__ 0XFFFFP-8UHK
#define PORTB _SFR_IO8(0x05)
#define PORTC _SFR_IO8(0x08)
#define PORTD _SFR_IO8(0x0B)
#define TCNT0_0 0
#define TCNT0_1 1
#define TCNT0_2 2
#define TCNT0_3 3
#define TCNT0_4 4
#define TCNT0_5 5
#define TCNT0_6 6
#define TCNT0_7 7
#define __SFRACT_EPSILON__ 0x1P-7HR
#define B1100101 101
#define B0111010 58
#define __FLT_HAS_QUIET_NAN__ 1
#define UINTMAX_MAX UINT64_MAX
#define INT32_C(value) __CONCAT(value, L)
#define B01010001 81
#define __FLT_MAX_10_EXP__ 38
#define TIMER1_COMPB_vect _VECTOR(12)
#define B0101110 46
#define B0101111 47
#define ADC _SFR_MEM16(0x78)
#define FUSEMEM __attribute__((__used__, __section__ (".fuse")))
#define INT0_vect_num 1
#define __SEOF 0x0020
#define OCR2_0 0
#define OCR2_1 1
#define OCR2_2 2
#define OCR2_3 3
#define OCR2_4 4
#define OCR2_5 5
#define __LONG_MAX__ 2147483647L
#define OCR2_7 7
#define __WCHAR_T__ 
#define B1011110 94
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define B01010010 82
#define B01010011 83
#define va_copy(d,s) __builtin_va_copy(d,s)
#define B1011111 95
#define HFUSE_DEFAULT (FUSE_BOOTSZ0 & FUSE_BOOTSZ1 & FUSE_SPIEN)
#define OCR2BUB 2
#define __FLT_HAS_INFINITY__ 1
#define ADCH1 1
#define ADCH2 2
#define ADCH3 3
#define ADCH4 4
#define ADCH5 5
#define ADCH6 6
#define ADCH7 7
#define _SFR_DWORD(sfr) _MMIO_DWORD(_SFR_ADDR(sfr))
#define ADTS0 0
#define __LPM_dword_enhanced__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); uint32_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z+" "\n\t" "lpm %C0, Z+" "\n\t" "lpm %D0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
#define PRIxFAST16 "x"
#define TWPS0 0
#define TWPS1 1
#define ADTS1 1
#define PRIXPTR PRIX16
#define USART_UDRE_vect _VECTOR(19)
#define __cpp_unicode_literals 200710
#define __USA_FBIT__ 16
#define OCR1AH6 6
#define PRIX16 "X"
#define B11100000 224
#define OSCCAL _SFR_MEM8(0x66)
#define __UINT_FAST16_TYPE__ unsigned int
#define __DEC64_MAX__ 9.999999999999999E384DD
#define pgm_read_byte(address_short) pgm_read_byte_near(address_short)
#define digitalPinToPCICR(p) ( (((p) >= 10) && ((p) <= 13)) || (((p) >= 50) && ((p) <= 53)) || (((p) >= 62) && ((p) <= 69)) ? (&PCICR) : ((uint8_t *)0) )
#define FUSE_CKOUT (unsigned char)~_BV(6)
#define tanf tan
#define NULL __null
#define __BUILTIN_AVR_RBITS 1
#define ARDUINO 105
#define __SERR 0x0010
#define __CHAR16_TYPE__ unsigned int
#define PRIxFAST32 "lx"
#define __PRAGMA_REDEFINE_EXTNAME 1
#define B1000000 64
#define __STDINT_H_ 
#define SCNuPTR SCNu16
#define __AVR_HAVE_LPMX__ 1
#define FALLING 2
#define TCN2UB 4
#define asinf asin
#define _VA_LIST_DEFINED 
#define PRIX32 "lX"
#define __INT_LEAST16_MAX__ 32767
#define ADCL0 0
#define ADCL1 1
#define __DEC64_MANT_DIG__ 16
#define ADCL3 3
#define ADCL4 4
#define ADCL5 5
#define ADCL6 6
#define ADCL7 7
#define __UINT_LEAST32_MAX__ 4294967295UL
#define __SACCUM_FBIT__ 7
#define __GCC_ATOMIC_LONG_LOCK_FREE 1
#define _SFR_ADDR(sfr) _SFR_MEM_ADDR(sfr)
#define __INT_LEAST64_TYPE__ long long int
#define INT64_MAX 0x7fffffffffffffffLL
#define WDTCSR _SFR_MEM8(0x60)
#define USART_RX_vect_num 18
#define __INT16_TYPE__ int
#define __INT_LEAST8_TYPE__ signed char
#define B10001100 140
#define B10001101 141
#define B1000100 68
#define B1000101 69
#define SCNxLEAST16 "x"
#define __SQ_FBIT__ 31
#define _MMIO_DWORD(mem_addr) (*(volatile uint32_t *)(mem_addr))
#define __DEC32_MAX_EXP__ 97
#define __ATTR_NORETURN__ __attribute__((__noreturn__))
#define B10001110 142
#define B10001111 143
#define B1000110 70
#define __AVR_LIBC_MINOR__ 8
#define SLEEP_MODE_PWR_SAVE (0x03<<1)
#define __INT_FAST8_MAX__ 127
#define B00101000 40
#define __INTPTR_MAX__ 32767
#define B00101010 42
#define __QQ_FBIT__ 7
#define B1011000 88
#define B1011001 89
#define __INTTYPES_H_ 
#define B011100 28
#define SCNuFAST16 "u"
#define __UTA_IBIT__ 16
#define B1011011 91
#define B011110 30
#define B011111 31
#define BODS 6
#define SCNuFAST32 "lu"
#define ICR1H0 0
#define ICR1H1 1
#define ICR1H2 2
#define ICR1H3 3
#define ICR1H4 4
#define ICR1H5 5
#define ICR1H7 7
#define COM2A1 7
#define digitalPinToPCMSKbit(p) ( (((p) >= 10) && ((p) <= 13)) ? ((p) - 6) : ( ((p) == 50) ? 3 : ( ((p) == 51) ? 2 : ( ((p) == 52) ? 1 : ( ((p) == 53) ? 0 : ( (((p) >= 62) && ((p) <= 69)) ? ((p) - 62) : 0 ) ) ) ) ) )
#define B10111100 188
#define B10111101 189
#define B1110100 116
#define B1110101 117
#define OCR0A_1 1
#define OCR0A_2 2
#define OCR0A_3 3
#define PRIXFAST8 "X"
#define OCR0A_5 5
#define OCR0A_7 7
#define COM2B0 4
#define COM2B1 5
#define B011101 29
#define B1101000 104
#define B10111110 190
#define B10111111 191
#define GPIOR22 2
#define B1110110 118
#define B1110111 119
#define LOW 0x0
#define INT64_MIN (-INT64_MAX - 1LL)
#define AS2 5
#define __LDBL_MANT_DIG__ 24
#define __SFRACT_FBIT__ 7
#define PRIXLEAST8 "X"
#define _EEPROM_REG_LOCATIONS_ 1F2021
#define RAD_TO_DEG 57.295779513082320876798154814105
#define PB2 PORTB2
#define B1101111 111
#define __SACCUM_MIN__ (-0X1P7HK-0X1P7HK)
#define fdev_get_udata(stream) ((stream)->udata)
#define __DBL_HAS_QUIET_NAN__ 1
#define __AVR_HAVE_PRR_PRUSART0 
#define false 0x0
#define UMSEL01 7
#define __GNUC_VA_LIST 
#define ICR1L0 0
#define ICR1L2 2
#define ICR1L3 3
#define ICR1L4 4
#define ICR1L5 5
#define ICR1L6 6
#define ICR1L7 7
#define B0000000 0
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define TWINT 7
#define B01000000 64
#define B01000001 65
#define RWWSB 6
#define __SMALLOC 0x80
#define microsecondsToClockCycles(a) ( (a) * clockCyclesPerMicrosecond() )
#define AVR 1
#define OCR0B_2 2
#define __BUILTIN_AVR_FMULS 1
#define XRAMEND RAMEND
#define B01000011 67
#define B1111110 126
#define __INTPTR_TYPE__ int
#define __UINT16_TYPE__ unsigned int
#define __WCHAR_TYPE__ int
#define B01010101 85
#define __SIZEOF_FLOAT__ 4
#define PRIiPTR PRIi16
#define ICR1H _SFR_MEM8(0x87)
#define __AVR__ 1
#define __BUILTIN_AVR_INSERT_BITS 1
#define __AVR_HAVE_JMP_CALL__ 1
#define __USQ_FBIT__ 32
#define FUSES __fuse_t __fuse FUSEMEM
#define __UINTPTR_MAX__ 65535U
#define TIMER4D 14
#define loop_until_bit_is_set(sfr,bit) do { } while (bit_is_clear(sfr, bit))
#define __DEC64_MIN_EXP__ (-382)
#define SCNxPTR SCNx16
#define ADC_vect _VECTOR(21)
#define putc(__c,__stream) fputc(__c, __stream)
#define FUSE_EESAVE (unsigned char)~_BV(3)
#define B000011 3
#define __cpp_decltype 200707
#define B11010100 212
#define __INT_FAST64_MAX__ 9223372036854775807LL
#define portModeRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define B11010111 215
#define __FLT_DIG__ 6
#define UDORD0 2
#define INT_FAST32_MAX INT32_MAX
#define B01110000 112
#define B01110001 113
#define B1011010 90
#define _WCHAR_T_DECLARED 
#define __UINT_FAST64_TYPE__ long long unsigned int
#define M_LN10 2.30258509299404568402
#define __BUILTIN_AVR_BITSHK 1
#define B01110010 114
#define B01110011 115
#define PB0 PORTB0
#define PB1 PORTB1
#define __BUILTIN_AVR_BITSHR 1
#define PB3 PORTB3
#define PB4 PORTB4
#define PB5 PORTB5
#define PB6 PORTB6
#define PB7 PORTB7
#define TWA4 5
#define PSRSYNC 0
#define UINT_FAST8_MAX UINT8_MAX
#define __INT_MAX__ 32767
#define LSBFIRST 0
#define truncf trunc
#define PC0 PORTC0
#define PC1 PORTC1
#define PC2 PORTC2
#define PC3 PORTC3
#define PC4 PORTC4
#define PC5 PORTC5
#define PC6 PORTC6
#define __LPM_float_enhanced__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr); float __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z+" "\n\t" "lpm %C0, Z+" "\n\t" "lpm %D0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
#define SCNoFAST16 "o"
#define Pins_Arduino_h 
#define labs(__i) __builtin_labs(__i)
#define SERIAL_6E1 0x22
#define __LACCUM_FBIT__ 31
#define PORF 0
#define PD0 PORTD0
#define PD1 PORTD1
#define PD2 PORTD2
#define WGM00 0
#define WGM01 1
#define WGM02 3
#define PD6 PORTD6
#define PD7 PORTD7
#define _T_SIZE_ 
#define TIMER2_OVF_vect _VECTOR(9)
#define WGM10 0
#define WGM11 1
#define fmodf fmod
#define WGM13 4
#define __USACCUM_MIN__ 0.0UHK
#define feof(s) ((s)->flags & __SEOF)
#define M_SQRT2 1.41421356237309504880
#define lrintf lrint
#define SCNoFAST32 "lo"
#define B1001001 73
#define __UHA_IBIT__ 8
#define portOutputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )
#define __AVR_HAVE_PRR_PRTWI 
#define __INT64_TYPE__ long long int
#define __BUILTIN_AVR_BITSLK 1
#define __BUILTIN_AVR_BITSLR 1
#define WGM21 1
#define WGM22 3
#define __FLT_MAX_EXP__ 128
#define B1100 12
#define B1101 13
#define B001100 12
#define __AVR_HAVE_MUL__ 1
#define __UTQ_IBIT__ 0
#define B1001011 75
#define B101101 45
#define UINT32_C(value) __CONCAT(value, UL)
#define B1111 15
#define B11111000 248
#define B001110 14
#define RANDOM_MAX 0x7FFFFFFF
#define __DBL_MANT_DIG__ 24
#define ___int_size_t_h 
#define B10100100 164
#define __BUILTIN_AVR_ULLKBITS 1
#define __INT_LEAST64_MAX__ 9223372036854775807LL
#define __AVR_HAVE_MOVW__ 1
#define SERIAL_7E1 0x24
#define UINT_FAST64_MAX UINT64_MAX
#define B10101100 172
#define B10101101 173
#define LB_MODE_2 (0xFE)
#define B1100100 100
#define INT_FAST32_MIN INT32_MIN
#define B11111111 255
#define __DEC64_MIN__ 1E-383DD
#define _AVR_LOCK_H_ 1
#define __WINT_TYPE__ int
#define __UINT_LEAST32_TYPE__ long unsigned int
#define __SIZEOF_SHORT__ 2
#define __ULLFRACT_IBIT__ 0
#define CAL0 0
#define SCNu16 "u"
#define B10101110 174
#define B10101111 175
#define B1100110 102
#define __LDBL_MIN_EXP__ (-125)
#define CAL2 2
#define roundf round
#define DEFAULT 1
#define _AVR_VERSION_H_ 
#define __UDA_IBIT__ 32
#define B1111000 120
#define B1111001 121
#define SCNu32 "lu"
#define stdout (__iob[1])
#define TIMER1_COMPB_vect_num 12
#define B00011100 28
#define B00011101 29
#define EOF (-1)
#define __INT_LEAST8_MAX__ 127
#define MSTR 4
#define B1 1
#define B1111010 122
#define DTOSTR_UPPERCASE 0x04
#define pgm_read_float(address_short) pgm_read_float_near(address_short)
#define SERIAL_6N1 0x02
#define SERIAL_6N2 0x0A
#define B00011110 30
#define B00011111 31
#define B111110 62
#define B111111 63
#define PRIiLEAST8 "i"
#define __LFRACT_FBIT__ 31
#define SERIAL_6O1 0x32
#define SERIAL_6O2 0x3A
#define ISR_NOBLOCK __attribute__((interrupt))
#define __LDBL_MAX_10_EXP__ 38
#define NUM_DIGITAL_PINS 70
#define __ATOMIC_RELAXED 0
#define lowByte(w) ((uint8_t) ((w) & 0xff))
#define __DBL_EPSILON__ double(1.19209290e-7L)
#define __BUILTIN_AVR_BITSUK 1
#define __BUILTIN_AVR_BITSUR 1
#define _SIZET_ 
#define __UINT8_C(c) c
#define NAN __builtin_nan("")
#define coshf cosh
#define __INT_LEAST32_TYPE__ long int
#define __wchar_t__ 
#define __BUILTIN_AVR_URBITS 1
#define B11000100 196
#define SEEK_END 2
#define __SIZEOF_WCHAR_T__ 2
#define __UINT64_TYPE__ long long unsigned int
#define __AVR_LIBC_DATE_STRING__ "20111229"
#define SCNiFAST16 "i"
#define TWBR0 0
#define TWBR1 1
#define TWBR2 2
#define TWBR3 3
#define TWBR4 4
#define TWBR5 5
#define TWBR6 6
#define TWBR7 7
#define PRR _SFR_MEM8(0x64)
#define B01100000 96
#define B01100001 97
#define PCMSK1 _SFR_MEM8(0x6C)
#define PORT3 3
#define __LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR
#define B11011100 220
#define B01100010 98
#define B0101100 44
#define B11011001 217
#define B01010100 84
#define B0101101 45
#define SCNiFAST32 "li"
#define TOIE0 0
#define TOIE1 0
#define TOIE2 0
#define PRIXFAST16 "X"
#define TXC0 6
#define PCICR _SFR_MEM8(0x68)
#define TCNT1H0 0
#define TCNT1H1 1
#define TCNT1H2 2
#define TCNT1H3 3
#define __TQ_FBIT__ 127
#define TCNT1H5 5
#define TCNT1H7 7
#define max(a,b) ((a)>(b)?(a):(b))
#define EMPTY_INTERRUPT(vector) extern "C" void vector(void) __attribute__ ((signal,naked,__INTR_ATTRS)); void vector (void) { __asm__ __volatile__ ("reti" ::); }
#define B11011010 218
#define B11011011 219
#define B10000 16
#define B10001 17
#define PCINT23 7
#define PUD 4
#define TCR2AUB 1
#define __INT_FAST8_TYPE__ signed char
#define BODSE 5
#define __ULLACCUM_EPSILON__ 0x1P-48ULLK
#define __BUILTIN_AVR_ROUNDK 1
#define B10010 18
#define B10011 19
#define __BUILTIN_AVR_ROUNDR 1
#define PCIE0 0
#define PCIE1 1
#define atanf atan
#define EEDR0 0
#define va_arg(v,l) __builtin_va_arg(v,l)
#define EERIE 3
#define UCPHA0 1
#define __LPM_word_tiny__(addr) (__extension__({ uint16_t __addr16 = (uint16_t)(addr) + __AVR_TINY_PM_BASE_ADDRESS__; uint16_t __result; __asm__ ( "ld %A0, z+" "\n\t" "ld %B0, z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
#define B101000 40
#define PCIF0 0
#define PCIF1 1
#define PCIF2 2
#define TCNT1L _SFR_MEM8(0x84)
#define B11110101 245
#define B1010110 86
#define __UHQ_IBIT__ 0
#define __ATTR_PURE__ __attribute__((__pure__))
#define __LLACCUM_IBIT__ 16
#define EEDR5 5
#define B1010111 87
#define portInputRegister(P) ( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )
#define B00 0
#define B01 1
#define B11110110 246
#define B11110111 247
#define TCNT1L0 0
#define TCNT1L1 1
#define TCNT1L2 2
#define TCNT1L3 3
#define TCNT1L4 4
#define TCNT1L5 5
#define TCNT1L6 6
#define TCNT1L7 7
#define ACO 5
#define INTMAX_MAX INT64_MAX
#define B0010000 16
#define B0010001 17
#define __STRINGIFY(x) #x
#define B10 2
#define __AVR_DEVICE_NAME__ atmega328p
#define ISR_ALIASOF(v) __attribute__((alias(__STRINGIFY(v))))
#define __DBL_DECIMAL_DIG__ 9
#define bit(b) (1UL << (b))
#define SERIAL_6E2 0x2A
#define B0010010 18
#define B0010011 19
#define __DEC_EVAL_METHOD__ 2
#define _SIZE_T 
#define PRIxFAST8 "x"
#define B10100110 166
#define __TA_FBIT__ 47
#define B11000101 197
#define PI 3.1415926535897932384626433832795
#define _SFR_BYTE(sfr) _MMIO_BYTE(_SFR_ADDR(sfr))
#define FDEV_SETUP_STREAM(p,g,f) { .put = p, .get = g, .flags = f, .udata = 0, }
#define OCR0B_4 4
#define ADCSRA _SFR_MEM8(0x7A)
#define ADCSRB _SFR_MEM8(0x7B)
#define OCR0B_5 5
#define B10010010 146
#define B10010011 147
#define M_LOG10E 0.43429448190325182765
#define min(a,b) ((a)<(b)?(a):(b))
#define ICR1H6 6
#define PRIdFAST16 "d"
#define __UDQ_IBIT__ 0
#define B1101001 105
#define UMSEL00 6
#define COM2A0 6
#define _BV(bit) (1 << (bit))
#define SE 0
#define PSTR(s) (__extension__({static const char __c[] PROGMEM = (s); &__c[0];}))
#define SP _SFR_IO16(0x3D)
#define _STRING_H_ 1
#define PD4 PORTD4
#define B00001100 12
#define B00001101 13
#define _GCC_SIZE_T 
#define B101100 44
#define PD5 PORTD5
#define __ORDER_BIG_ENDIAN__ 4321
#define B1101010 106
#define B1101011 107
#define __WITH_AVRLIBC__ 1
#define B00001110 14
#define B00001111 15
#define __ACCUM_EPSILON__ 0x1P-15K
#define __UINT32_C(c) c ## UL
#define B101110 46
#define B101111 47
#define __BUILTIN_AVR_COUNTLSUHK 1
#define PRIdFAST32 "ld"
#define __INTMAX_MAX__ 9223372036854775807LL
#define __cpp_alias_templates 200704
#define __BUILTIN_AVR_COUNTLSUHR 1
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __size_t__ 
#define TWO_PI 6.283185307179586476925286766559
#define TIMSK0 _SFR_MEM8(0x6E)
#define TIMSK1 _SFR_MEM8(0x6F)
#define TIMSK2 _SFR_MEM8(0x70)
#define IVSEL 1
#define __FLT_DENORM_MIN__ 1.40129846e-45F
#define PRIoPTR PRIo16
#define NOT_ON_TIMER 0
#define INTMAX_MIN INT64_MIN
#define RXC0 7
#define TIMER2_COMPA_vect _VECTOR(7)
#define _STDLIB_H_ 1
#define SLEEP_MODE_IDLE (0x00<<1)
#define __LLFRACT_IBIT__ 0
#define _VA_LIST_T_H 
#define __INT8_MAX__ 127
#define __OPTIMIZE_SIZE__ 1
#define INT0_vect _VECTOR(1)
#define __UINT_FAST32_TYPE__ long unsigned int
#define UBRR0H _SFR_MEM8(0xC5)
#define XH r27
#define UBRR0L _SFR_MEM8(0xC4)
#define XL r26
#define __CHAR32_TYPE__ long unsigned int
#define __BUILTIN_AVR_COUNTLSULK 1
#define B01100100 100
#define __BUILTIN_AVR_COUNTLSULR 1
#define _SFR_MEM16(mem_addr) _MMIO_WORD(mem_addr)
#define B10000111 135
#define __FLT_MAX__ 3.40282347e+38F
#define YH r29
#define B00111100 60
#define B00111101 61
#define YL r28
#define SLEEP_MODE_EXT_STANDBY (0x07<<1)
#define INT_FAST64_MAX INT64_MAX
#define UINT_LEAST32_MAX UINT32_MAX
#define __cpp_constexpr 200704
#define B00111110 62
#define B00111111 63
#define ZL r30
#define __va_list__ 
#define B01010000 80
#define OCT 8
#define M_1_PI 0.31830988618379067154
#define B00110011 51
#define B00001010 10
#define __USACCUM_FBIT__ 8
#define B1001100 76
#define bit_is_set(sfr,bit) (_SFR_BYTE(sfr) & _BV(bit))
#define B11001001 201
#define TIMER1_COMPA_vect_num 11
#define __BUILTIN_AVR_COUNTLSFX 1
#define fmaf fma
#define __INT32_TYPE__ long int
#define DEG_TO_RAD 0.017453292519943295769236907684886
#define TIMER1_OVF_vect _VECTOR(13)
#define B11001010 202
#define B11001011 203
#define B00000 0
#define __SIZEOF_DOUBLE__ 4
#define __UFRACT_EPSILON__ 0x1P-16UR
#define ISR(vector,...) extern "C" void vector (void) __attribute__ ((signal,__INTR_ATTRS)) __VA_ARGS__; void vector (void)
#define __BUILTIN_AVR_COUNTLSHK 1
#define B00010 2
#define __BUILTIN_AVR_COUNTLSHR 1
#define __INTMAX_TYPE__ long long int
#define B0011011 27
#define __BUILTIN_AVR_ABSLLK 1
#define __BUILTIN_AVR_ABSLLR 1
#define __DEC128_MAX_EXP__ 6145
#define B101010 42
#define M_LN2 0.69314718055994530942
#define _T_SIZE 
#define B11100100 228
#define B11100101 229
#define UINT8_C(value) ((uint8_t) __CONCAT(value, U))
#define OCR1AL0 0
#define __AVR_HAVE_16BIT_SP__ 1
#define GTCCR _SFR_IO8(0x23)
#define PRIdFAST8 "d"
#define SPMCSR _SFR_IO8(0x37)
#define TIFR0 _SFR_IO8(0x15)
#define TIFR1 _SFR_IO8(0x16)
#define TIFR2 _SFR_IO8(0x17)
#define B11100110 230
#define __ATOMIC_CONSUME 1
#define ADLAR 5
#define __GNUC_MINOR__ 9
#define __UINTMAX_MAX__ 18446744073709551615ULL
#define PRIuLEAST8 "u"
#define B0000001 1
#define TSM 7
#define __DEC32_MANT_DIG__ 7
#define OCR0A_0 0
#define __HA_FBIT__ 7
#define INTMAX_C(value) __CONCAT(value, LL)
#define ICF1 5
#define B11111001 249
#define pgm_read_float_near(address_short) __LPM_float((uint16_t)(address_short))
#define __BUILTIN_AVR_COUNTLSLK 1
#define __BUILTIN_AVR_COUNTLSLR 1
#define B0000010 2
#define B0000011 3
#define ISR_ALIAS(vector,tgt) extern "C" void vector (void) __attribute__((signal, naked, __INTR_ATTRS)); void vector (void) { asm volatile ("jmp " __STRINGIFY(tgt) ::); }
#define INT_FAST64_MIN INT64_MIN
#define B11000110 198
#define PCMSK0 _SFR_MEM8(0x6B)
#define PCMSK2 _SFR_MEM8(0x6D)
#define OCR0A_4 4
#define __BUILTIN_AVR_CLI 1
#define bitSet(value,bit) ((value) |= (1UL << (bit)))
#define B11000111 199
#define __DBL_MAX_10_EXP__ 38
#define B11111010 250
#define B11111011 251
#define BLB1_MODE_1 (0xFF)
#define BLB1_MODE_2 (0xEF)
#define BLB1_MODE_3 (0xCF)
#define BLB1_MODE_4 (0xDF)
#define UINT16_MAX (__CONCAT(INT16_MAX, U) * 2U + 1U)
#define __LDBL_DENORM_MIN__ 1.40129846e-45L
#define OCR0A_6 6
#define B01010110 86
#define B01010111 87
#define __INT16_C(c) c
#define ADPS2 2
#define __STDC__ 1
#define pgm_read_byte_near(address_short) __LPM((uint16_t)(address_short))
#define __ATTR_GNU_INLINE__ __attribute__((__gnu_inline__))
#define EIMSK _SFR_IO8(0x1D)
#define __PTRDIFF_TYPE__ int
#define pgm_read_dword(address_short) pgm_read_dword_near(address_short)
#define __LLFRACT_MIN__ (-0.5LLR-0.5LLR)
#define WGM12 3
#define SPDR0 0
#define SPDR1 1
#define SPDR2 2
#define SPDR3 3
#define SPDR4 4
#define SPDR5 5
#define SPDR6 6
#define SPDR7 7
#define FUSE_CKDIV8 (unsigned char)~_BV(7)
#define OCR1BH6 6
#define WDT_vect _VECTOR(6)
#define B0110000 48
#define B0110001 49
#define cbrtf cbrt
#define __BUILTIN_AVR_LRBITS 1
#define fdimf fdim
#define __ATOMIC_SEQ_CST 5
#define __DA_FBIT__ 31
#define __BOOT_LOCK_BITS_1_EXIST 
#define PRIdPTR PRId16
#define digitalPinToTimer(P) ( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )
#define BIN 2
#define UBRR0_10 2
#define UBRR0_11 3
#define B0110010 50
#define OCR2_6 6
#define UPE0 2
#define __UINT32_TYPE__ long unsigned int
#define __AVR_LIBC_REVISION__ 0
#define PRId16 "d"
#define __STDC_LIMIT_MACROS 
#define __BUILTIN_AVR_ROUNDLLK 1
#define __UINTPTR_TYPE__ unsigned int
#define __BUILTIN_AVR_ROUNDLLR 1
#define OCR1AL2 2
#define __USA_IBIT__ 16
#define __BUILTIN_AVR_ULRBITS 1
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __DEC128_MANT_DIG__ 34
#define __LDBL_MIN_10_EXP__ (-37)
#define PRId32 "ld"
#define BLBSET 3
#define __BUILTIN_AVR_COUNTLSUK 1
#define __BUILTIN_AVR_COUNTLSUR 1
#define WCOL 6
#define B01100111 103
#define PCINT2_vect_num 5
#define __SIZEOF_LONG_LONG__ 8
#define B00101100 44
#define B00101101 45
#define __ULACCUM_EPSILON__ 0x1P-32ULK
#define pgm_get_far_address(var) ({ uint_farptr_t tmp; __asm__ __volatile__( "ldi	%A0, lo8(%1)" "\n\t" "ldi	%B0, hi8(%1)" "\n\t" "ldi	%C0, hh8(%1)" "\n\t" "clr	%D0" "\n\t" : "=d" (tmp) : "p" (&(var)) ); tmp; })
#define __cpp_user_defined_literals 200809
#define PRIo16 "o"
#define FUSE_SUT0 (unsigned char)~_BV(4)
#define FUSE_SUT1 (unsigned char)~_BV(5)
#define __SACCUM_IBIT__ 8
#define B00101110 46
#define B00101111 47
#define B1011100 92
#define B1011101 93
#define __GCC_ATOMIC_LLONG_LOCK_FREE 1
#define BORF 2
#define F_CPU 16000000L
#define SPM_PAGESIZE 128
#define __LDBL_DIG__ 6
#define OCR1AH0 0
#define ICR1 _SFR_MEM16(0x86)
#define OCR1AH2 2
#define OCR1AH3 3
#define OCR1AH4 4
#define OCR1AH5 5
#define __PGMSPACE_H_ 1
#define OCR1AH7 7
#define __FLT_DECIMAL_DIG__ 9
#define __UINT_FAST16_MAX__ 65535U
#define PRIo32 "lo"
#define TCNT0 _SFR_IO8(0x26)
#define TCNT1 _SFR_MEM16(0x84)
#define TCNT2 _SFR_MEM8(0xB2)
#define TIMER2_COMPB_vect _VECTOR(8)
#define __GCC_ATOMIC_SHORT_LOCK_FREE 1
#define __BUILTIN_AVR_ABSHK 1
#define PRSPI 2
#define __BUILTIN_AVR_FLASH_SEGMENT 1
#define B10010000 144
#define B10010001 145
#define _MMIO_WORD(mem_addr) (*(volatile uint16_t *)(mem_addr))
#define INT1_vect _VECTOR(2)
#define fabsf fabs
#define PRIoFAST8 "o"
#define INT_LEAST16_MAX INT16_MAX
#define PRIoLEAST8 "o"
#define __ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR
#define __UINT_FAST8_TYPE__ unsigned char
#define TXEN0 3
#define OCR0B_0 0
#define OCR0B_1 1
#define __USFRACT_EPSILON__ 0x1P-8UHR
#define OCR0B_3 3
#define __ULACCUM_FBIT__ 32
#define OCR0B_6 6
#define OCR0B_7 7
#define abs(x) ((x)>0?(x):-(x))
#define __QQ_IBIT__ 0
#define __ATOMIC_ACQ_REL 4
#define __WCHAR_T 
#define __ATOMIC_RELEASE 3
#define AVR_STACK_POINTER_REG SP
#define __BUILTIN_AVR_FMUL 1
#define F(string_literal) (reinterpret_cast<const __FlashStringHelper *>(PSTR(string_literal)))
#define PROGMEM __ATTR_PROGMEM__
#define OCR1AL1 1
#define OCR1AL3 3
#define OCR1AL4 4
#define OCR1AL5 5
#define OCR1AL6 6
#define OCR1AL7 7
#define digitalPinToPCICRbit(p) ( (((p) >= 10) && ((p) <= 13)) || (((p) >= 50) && ((p) <= 53)) ? 0 : ( (((p) >= 62) && ((p) <= 69)) ? 2 : 0 ) )
#define ACIS0 0
#define ACIS1 1
